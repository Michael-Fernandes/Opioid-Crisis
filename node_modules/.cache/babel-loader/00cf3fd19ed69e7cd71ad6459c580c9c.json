{"ast":null,"code":"import _classCallCheck from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/fernb0t/Code/react/ihme/src/Components/Legend/Legend.js\";\nimport React, { Component } from 'react';\nimport Active from \"./Active\";\nimport CountryList from \"./CountryList\";\nimport \"./Legend.css\";\n\nvar getActive = function getActive(countries) {\n  return countries.filter(function (el) {\n    return el.active === true;\n  });\n};\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Legend, _Component);\n\n  function Legend(props) {\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this, props));\n    _this.state = {\n      isSearching: false,\n      search: \"\"\n    };\n    _this.toggleActive = _this.toggleActive.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isSearching = _this.isSearching.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.searchChange = _this.searchChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"toggleActive\",\n    value: function toggleActive(country) {\n      this.props.toggleActive(country);\n      this.setState({\n        isSearching: false,\n        search: \"\"\n      });\n    }\n  }, {\n    key: \"isSearching\",\n    value: function isSearching() {\n      this.setState({\n        isSearching: !this.state.isSearching\n      });\n    }\n  }, {\n    key: \"searchChange\",\n    value: function searchChange(event) {\n      var isSearching = false;\n\n      if (this.state.search.length) {\n        isSearching = true;\n      }\n\n      this.setState({\n        search: event.target.value,\n        isSearching: isSearching\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          search = _this$state.search,\n          isSearching = _this$state.isSearching;\n      var countries = this.props.countries;\n      var activeCountries = getActive(countries);\n      return React.createElement(\"div\", {\n        className: \"LegendDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        value: this.state.search,\n        onChange: this.searchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Active, {\n        isSearching: isSearching,\n        activeCountries: activeCountries,\n        toggleActive: this.toggleActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(CountryList, {\n        bool: activeCountries.length && !isSearching,\n        isSearching: isSearching,\n        countries: countries,\n        toggleActive: this.toggleActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Legend;\n}(Component);\n\nexport { Legend as default };","map":{"version":3,"sources":["/Users/fernb0t/Code/react/ihme/src/Components/Legend/Legend.js"],"names":["React","Component","Active","CountryList","getActive","countries","filter","el","active","Legend","props","state","isSearching","search","toggleActive","bind","searchChange","country","setState","event","length","target","value","activeCountries"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAe;AAC7B,SAAOA,SAAS,CAACC,MAAV,CAAiB,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,MAAH,KAAc,IAAlB;AAAA,GAAnB,CAAP;AACH,CAFD;;IAIqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,MAAM,EAAC;AAFE,KAAb;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKH,WAAL,GAAmB,MAAKA,WAAL,CAAiBG,IAAjB,uDAAnB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AATc;AAUjB;;;;iCAEYE,O,EAAQ;AACjB,WAAKP,KAAL,CAAWI,YAAX,CAAwBG,OAAxB;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAC,KAAb;AAAoBC,QAAAA,MAAM,EAAC;AAA3B,OAAd;AACH;;;kCAEY;AACT,WAAKK,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAE,CAAE,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACH;;;iCAEYO,K,EAAM;AACf,UAAIP,WAAW,GAAG,KAAlB;;AACA,UAAG,KAAKD,KAAL,CAAWE,MAAX,CAAkBO,MAArB,EAA4B;AACxBR,QAAAA,WAAW,GAAG,IAAd;AACH;;AACD,WAAKM,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEM,KAAK,CAACE,MAAN,CAAaC,KAAvB;AAA8BV,QAAAA,WAAW,EAACA;AAA1C,OAAd;AACH;;;6BAEQ;AAAA,wBACyB,KAAKD,KAD9B;AAAA,UACCE,MADD,eACCA,MADD;AAAA,UACSD,WADT,eACSA,WADT;AAAA,UAECP,SAFD,GAEe,KAAKK,KAFpB,CAECL,SAFD;AAGL,UAAIkB,eAAe,GAAGnB,SAAS,CAACC,SAAD,CAA/B;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AACmB,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWE,MADrC;AAEmB,QAAA,QAAQ,EAAE,KAAKG,YAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAMI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAEJ,WAArB;AACQ,QAAA,eAAe,EAAEW,eADzB;AAEQ,QAAA,YAAY,EAAE,KAAKT,YAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAUI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAES,eAAe,CAACH,MAAhB,IAA0B,CAACR,WAA9C;AACa,QAAA,WAAW,EAAEA,WAD1B;AAEa,QAAA,SAAS,EAAEP,SAFxB;AAGa,QAAA,YAAY,EAAE,KAAKS,YAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ;AAiBH;;;;EApD+Bb,S;;SAAfQ,M","sourcesContent":["import React, { Component } from 'react'\nimport Active from \"./Active\"\nimport CountryList from \"./CountryList\"\nimport \"./Legend.css\"\n\nconst getActive = (countries) => {\n    return countries.filter(el => el.active === true)\n}\n\nexport default class Legend extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isSearching: false,\n            search:\"\"\n        }\n\n        this.toggleActive = this.toggleActive.bind(this);\n        this.isSearching = this.isSearching.bind(this);\n        this.searchChange = this.searchChange.bind(this)\n    }\n\n    toggleActive(country){\n        this.props.toggleActive(country);\n        this.setState({isSearching:false, search:\"\"})\n    }\n\n    isSearching(){\n        this.setState({isSearching: ! this.state.isSearching})\n    }\n\n    searchChange(event){\n        let isSearching = false;\n        if(this.state.search.length){\n            isSearching = true;\n        }\n        this.setState({ search: event.target.value, isSearching:isSearching })\n    }\n\n    render() {\n        let { search, isSearching } = this.state;\n        let { countries } = this.props;\n        let activeCountries = getActive(countries);\n\n        return (\n            <div className=\"LegendDisplay\">\n                <div className=\"Search\">\n                    <input type=\"text\" placeholder=\"search\" \n                                       value={this.state.search}  \n                                       onChange={this.searchChange} />\n                </div>\n                <Active isSearching={isSearching} \n                        activeCountries={activeCountries}\n                        toggleActive={this.toggleActive} />\n\n                <CountryList bool={activeCountries.length && !isSearching}\n                             isSearching={isSearching} \n                             countries={countries} \n                             toggleActive={this.toggleActive}/> \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}