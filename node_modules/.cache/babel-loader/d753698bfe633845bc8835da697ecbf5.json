{"ast":null,"code":"import _classCallCheck from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fernb0t/Code/react/michael-fernandes.github.io/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as ReactFauxDOM from 'react-faux-dom';\nimport data from \"../Resources/data.json\";\nimport colors from \"../Resources/colors.json\";\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.makeD3 = _this.makeD3.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getActive = _this.getActive.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    window.c = colors;\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"getActive\",\n    value: function getActive() {\n      var countries = this.props.countries;\n      var active = countries.filter(function (el) {\n        return el.active === true;\n      }); // I have no idea but this call drops data.....\n\n      return active;\n    }\n  }, {\n    key: \"makeD3\",\n    value: function makeD3() {\n      var fauxDiv = ReactFauxDOM.createElement('div'); //  TODO: dynamically add new data\n\n      var activeNames = this.getActive();\n      var activeData = getDataActive(activeNames); // set the dimensions and margins of the graph\n\n      var margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      },\n          width = 960 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom; // parse the date / time\n      // set the ranges\n\n      var x = d3.scaleTime().range([0, width]);\n      var y = d3.scaleLinear().range([height, 0]);\n      var svg = d3.select(fauxDiv).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var parseYear = d3.timeParse(\"%Y\"); // Scale the range of the data\n\n      var sample = data['Canada'][\"Both\"];\n      x.domain(d3.extent(sample, function (d) {\n        return parseYear(d.year);\n      }));\n      y.domain([0, d3.max(getDomain(activeData), function (d) {\n        return d.val;\n      })]); // define the line\n\n      var valueline = d3.line().x(function (d) {\n        return x(new Date(d.year, 1, 1));\n      }).y(function (d) {\n        return y(d.val);\n      });\n      var div = d3.select(\"#root\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = activeData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var countryData = _step.value;\n          var linePlot = svg.append(\"g\");\n          linePlot.append(\"path\").datum(countryData.data).attr(\"class\", \"line\").attr(\"d\", valueline).attr(\"stroke-width\", \"2.5px\").attr(\"stroke\", colors[countryData.name]).attr('color', colors[countryData.name]).attr(\"fill\", 'none').on(\"mouseover\", function (d) {\n            console.log('help');\n            div.transition().duration(200).style(\"opacity\", 1);\n            div.html(\"bad stuff\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n          }).on(\"mouseout\", function (d) {\n            div.transition().duration(500).style(\"opacity\", 0);\n          }); // 12. Appends a circle for each datapoint \n\n          linePlot.selectAll(\".linePlotPoint\").data(countryData.data).enter().append(\"circle\") // Uses the enter().append() method\n          .attr(\"class\", \"linePlotPoint\") // Assign a class for styling\n          .attr(\"cx\", function (d, i) {\n            return x(new Date(d.year, 1, 1));\n          }).attr(\"cy\", function (d) {\n            return y(d.val);\n          }).attr(\"r\", 5).attr(\"stroke\", colors[countryData.name]).attr(\"fill\", colors[countryData.name]);\n        } // Add the X Axis\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(5).tickSizeOuter(0)); // Add the Y Axis\n\n      svg.append(\"g\").call(d3.axisLeft(y).ticks(6).tickSizeOuter(0));\n      return fauxDiv;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var FauxSvg = this.makeD3();\n      return FauxSvg.toReact();\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nvar getDataFor = function getDataFor(country) {\n  return {\n    name: country.name,\n    data: data[[country.name]] //.sort(function(a, b){return a.year - b.year}) \n\n  };\n};\n\nvar getDomain = function getDomain(countries) {\n  var d = [{\n    val: 3.0\n  }];\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = countries[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var c = _step2.value;\n      d = d.concat(c.data);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return d;\n};\n\nvar getDataActive = function getDataActive(countries) {\n  var activeData = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = countries[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var c = _step3.value;\n      activeData.push(getDataFor(c));\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return activeData;\n};\n\nexport default ReactFauxDOM.withFauxDOM(Chart);","map":{"version":3,"sources":["/Users/fernb0t/Code/react/michael-fernandes.github.io/src/Components/Chart.js"],"names":["Component","d3","ReactFauxDOM","data","colors","Chart","props","makeD3","bind","getActive","window","c","countries","active","filter","el","fauxDiv","createElement","activeNames","activeData","getDataActive","margin","top","right","bottom","left","width","height","x","scaleTime","range","y","scaleLinear","svg","select","append","attr","parseYear","timeParse","sample","domain","extent","d","year","max","getDomain","val","valueline","line","Date","div","style","countryData","linePlot","datum","name","on","console","log","transition","duration","html","event","pageX","pageY","selectAll","enter","i","call","axisBottom","ticks","tickSizeOuter","axisLeft","FauxSvg","toReact","getDataFor","country","concat","push","withFauxDOM"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport * as d3 from 'd3'\nimport * as ReactFauxDOM from 'react-faux-dom'\nimport data from \"../Resources/data.json\"\nimport colors from \"../Resources/colors.json\"\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n\n        this.makeD3 = this.makeD3.bind(this);\n        this.getActive = this.getActive.bind(this)\n        window.c = colors;\n    }\n\n    getActive(){\n        let countries = this.props.countries;\n        let active = countries.filter(el => el.active === true); // I have no idea but this call drops data.....\n        return active;\n    }\n\n    makeD3(){\n        let fauxDiv = ReactFauxDOM.createElement('div');  \n        \n        //  TODO: dynamically add new data\n        let activeNames = this.getActive();\n        let activeData = getDataActive(activeNames)\n        \n        // set the dimensions and margins of the graph\n        var margin = {top: 20, right: 20, bottom: 30, left: 50},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n        // parse the date / time\n        // set the ranges\n        var x = d3.scaleTime().range([0, width]);\n        var y = d3.scaleLinear().range([height, 0]);\n\n        \n\n        let svg = d3.select(fauxDiv).append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        let parseYear = d3.timeParse(\"%Y\");\n        // Scale the range of the data\n        let sample = data['Canada'][\"Both\"];\n        x.domain(d3.extent(sample, function(d) { return parseYear(d.year) }));\n        y.domain([0, d3.max(getDomain(activeData), function(d) { return d.val; })]);\n\n        // define the line\n        let valueline = d3.line()\n            .x(function(d) { return x(new Date(d.year, 1, 1)); })\n            .y(function(d) { return y(d.val); });\n\n        let div = d3.select(\"#root\").append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n            \n        for( let countryData of activeData){\n            let linePlot = svg.append(\"g\")\n            linePlot.append(\"path\")\n                .datum(countryData.data)\n                .attr(\"class\", \"line\")\n                .attr(\"d\",valueline)\n                .attr(\"stroke-width\", \"2.5px\")\n                .attr(\"stroke\", colors[countryData.name])\n                .attr('color', colors[countryData.name])\n                .attr(\"fill\", 'none')\n                .on(\"mouseover\", function(d) {\n                    console.log('help')\n                    div.transition()\n                      .duration(200)\n                      .style(\"opacity\", 1);\n                    div.html(\"bad stuff\")\n                      .style(\"left\", (d3.event.pageX) + \"px\")\n                      .style(\"top\", (d3.event.pageY - 28) + \"px\");\n                    })\n                .on(\"mouseout\", function(d) {\n                        div.transition()\n                          .duration(500)\n                          .style(\"opacity\", 0);\n                        });\n            \n            // 12. Appends a circle for each datapoint \n            linePlot.selectAll(\".linePlotPoint\").data(countryData.data)\n                .enter().append(\"circle\") // Uses the enter().append() method\n                .attr(\"class\", \"linePlotPoint\") // Assign a class for styling\n                .attr(\"cx\", function(d, i) { return x(new Date(d.year, 1, 1)) })\n                .attr(\"cy\", function(d) { return y(d.val) })\n                .attr(\"r\", 5)\n                .attr(\"stroke\", colors[countryData.name])\n                .attr(\"fill\", colors[countryData.name]);\n\n\n                  \n        }\n\n        // Add the X Axis\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call( d3.axisBottom(x).ticks(5).tickSizeOuter(0) );\n\n        // Add the Y Axis\n        svg.append(\"g\")\n            .call( d3.axisLeft(y).ticks(6).tickSizeOuter(0) );\n\n        return fauxDiv;\n    }\n\n    render() {\n        let FauxSvg = this.makeD3();\n\n        return (\n            FauxSvg.toReact()\n        );\n    }\n}\n\nconst getDataFor = (country) =>{\n    return { \n        name:country.name, \n        data:data[[country.name]]//.sort(function(a, b){return a.year - b.year}) \n    }\n\n}\n\nconst getDomain = (countries) =>{\n    let d = [{val:3.0}]\n    for(let c of countries){\n        d = d.concat(c.data);\n    }\n    return d\n}\n\nconst getDataActive = (countries) =>{\n    let activeData = []\n    for(let c of countries){\n        activeData.push(getDataFor(c));\n    }\n    return activeData;\n}\n\nexport default ReactFauxDOM.withFauxDOM(Chart);\n"]},"metadata":{},"sourceType":"module"}