{"ast":null,"code":"import _classCallCheck from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as ReactFauxDOM from 'react-faux-dom';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    _this.makeD3 = _this.makeD3.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"makeD3\",\n    value: function makeD3() {\n      var fauxSvg = ReactFauxDOM.createElement('div'); // Set the dimensions of the canvas / graph\n\n      var margin = {\n        top: 30,\n        right: 20,\n        bottom: 30,\n        left: 50\n      },\n          width = 600 - margin.left - margin.right,\n          height = 270 - margin.top - margin.bottom; // Parse the date / time\n\n      var parseDate = d3.time.format(\"%d-%b-%y\").parse; // Set the ranges\n\n      var x = d3.time.scale().range([0, width]);\n      var y = d3.scale.linear().range([height, 0]); // Define the axes\n\n      var xAxis = d3.svg.axis().scale(x).orient(\"bottom\").ticks(5);\n      var yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(5); // Define the line\n\n      var valueline = d3.svg.line().x(function (d) {\n        return x(d.date);\n      }).y(function (d) {\n        return y(d.close);\n      }); // Adds the svg canvas\n\n      var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var data = this.props.data; // Scale the range of the data\n\n      x.domain(d3.extent(data, function (d) {\n        return d.date;\n      }));\n      y.domain([0, d3.max(data, function (d) {\n        return d.close;\n      })]); // Add the valueline path.\n\n      svg.append(\"path\").attr(\"class\", \"line\").attr(\"d\", valueline(data)); // Add the X Axis\n\n      svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); // Add the Y Axis\n\n      svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n      return fauxSvg;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var FauxSvg = this.makeFauxD3();\n      return FauxSvg.toReact();\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default ReactFauxDOM.withFauxDOM(Chart);","map":{"version":3,"sources":["/Users/fernb0t/Code/react/ihme/src/Components/Chart.js"],"names":["React","Component","d3","ReactFauxDOM","Chart","props","state","makeD3","bind","fauxSvg","createElement","margin","top","right","bottom","left","width","height","parseDate","time","format","parse","x","scale","range","y","linear","xAxis","svg","axis","orient","ticks","yAxis","valueline","line","d","date","close","select","append","attr","data","domain","extent","max","call","FauxSvg","makeFauxD3","toReact","withFauxDOM"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport * as ReactFauxDOM from 'react-faux-dom'\nclass Chart extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n      }\n\n      this.makeD3 = this.makeD3.bind(this);\n  }\n     makeD3(){\n        let fauxSvg = ReactFauxDOM.createElement('div');  \n\n        // Set the dimensions of the canvas / graph\n        var\tmargin = {top: 30, right: 20, bottom: 30, left: 50},\n        width = 600 - margin.left - margin.right,\n        height = 270 - margin.top - margin.bottom;\n\n        // Parse the date / time\n        var\tparseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n        // Set the ranges\n        var\tx = d3.time.scale().range([0, width]);\n        var\ty = d3.scale.linear().range([height, 0]);\n\n        // Define the axes\n        var\txAxis = d3.svg.axis().scale(x)\n        .orient(\"bottom\").ticks(5);\n\n        var\tyAxis = d3.svg.axis().scale(y)\n        .orient(\"left\").ticks(5);\n\n        // Define the line\n        var\tvalueline = d3.svg.line()\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.close); });\n\n        // Adds the svg canvas\n        var\tsvg = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const data = this.props.data\n\n        // Scale the range of the data\n        x.domain(d3.extent(data, function(d) { return d.date; }));\n        y.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n        // Add the valueline path.\n        svg.append(\"path\")\t\n            .attr(\"class\", \"line\")\n            .attr(\"d\", valueline(data));\n\n        // Add the X Axis\n        svg.append(\"g\")\t\t\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n        // Add the Y Axis\n        svg.append(\"g\")\t\t\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n\n        return fauxSvg;\n    }\n\n    render() {\n        let FauxSvg = this.makeFauxD3();\n\n        return (\n            FauxSvg.toReact()\n        );\n    }\n}\n\n\nexport default ReactFauxDOM.withFauxDOM(Chart);"]},"metadata":{},"sourceType":"module"}