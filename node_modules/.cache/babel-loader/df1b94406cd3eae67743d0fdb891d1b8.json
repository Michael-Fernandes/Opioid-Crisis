{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fernb0t/Code/react/ihme/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/fernb0t/Code/react/ihme/src/Components/Chart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport data from '../Resources/data.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart() {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this));\n    _this.getData = _this.getData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      d3.csv(data).then(function (data) {\n        data.forEach(function (d) {\n          d.population = +d.population;\n          d[\"location_name\"] = +d[\"location_name\"];\n          d[\"year\"] = +d[\"year\"];\n        });\n        console.log(data[0]);\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["/Users/fernb0t/Code/react/ihme/src/Components/Chart.js"],"names":["React","Component","d3","data","Chart","getData","bind","csv","then","forEach","d","population","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;IAEqBC,K;;;;;AACnB,mBAAa;AAAA;;AAAA;;AACT;AAEA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AAHS;AAIZ;;;;yCAEmB;AAClBJ,MAAAA,EAAE,CAACK,GAAH,CAAOJ,IAAP,EAAaK,IAAb,CAAkB,UAASL,IAAT,EAAe;AAC7BA,QAAAA,IAAI,CAACM,OAAL,CAAa,UAASC,CAAT,EAAY;AACrBA,UAAAA,CAAC,CAACC,UAAF,GAAe,CAACD,CAAC,CAACC,UAAlB;AACAD,UAAAA,CAAC,CAAC,eAAD,CAAD,GAAqB,CAACA,CAAC,CAAC,eAAD,CAAvB;AACAA,UAAAA,CAAC,CAAC,MAAD,CAAD,GAAY,CAACA,CAAC,CAAC,MAAD,CAAd;AACD,SAJH;AAKEE,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAAC,CAAD,CAAhB;AACL,OAPD;AAQD;;;;;;;;;;;;;;;;;;;;;;;;;;6BAMQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EA5BgCF,S;;SAAdG,K","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport data from '../Resources/data.csv';\n\nexport default class Chart extends Component {\n  constructor(){\n      super();\n\n      this.getData = this.getData.bind(this)\n  }\n\n  componentWillMount(){\n    d3.csv(data).then(function(data) {\n        data.forEach(function(d) {\n            d.population = +d.population;\n            d[\"location_name\"] = +d[\"location_name\"];\n            d[\"year\"] = +d[\"year\"];\n          });\n          console.log(data[0]);\n    });\n  }\n\n  async getData(){\n  }\n\n\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}