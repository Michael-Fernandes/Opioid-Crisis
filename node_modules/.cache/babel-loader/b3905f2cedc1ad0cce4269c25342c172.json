{"ast":null,"code":"import _classCallCheck from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fernb0t/Code/react/Opioid Crisis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/fernb0t/Code/react/Opioid Crisis/src/Components/Chart/CountryBlock.js\";\nimport React, { Component } from 'react';\nimport Countries from \"../../Resources/Continents\";\nvar highest = ['United States', 'Libya', 'United Arab Emirates', 'Estonia', 'Russian Federation', 'Iran', 'Canada', 'Lebanon', 'Kazakhstan', 'Lithuania'];\nvar lowest = ['South Sudan', 'Ethiopia', 'Burundi', 'Egypt', 'Somalia', 'Rwanda', 'Uganda', 'Solomon Islands', 'Madagascar', 'Papua New Guinea'];\nvar selectTop = [\"Top 10 Highest\", \"Top 10 Lowest\"];\nvar blocks = [\"--\", \"EU (European Union)\", \"AU (African Union)\", \"USAN (Union of South American Nations)\", \"AL (Arab League)\", \"ASEAN (Association of Southeast Asian Nations)\", \"PA (Pacific Alliance)\", \"USAN (Union of South American Nations)\"];\nvar continents = {\n  \"--\": \"--\",\n  \"Africa\": \"AF\",\n  \"Asia\": \"AS\",\n  \"Europe\": \"EU\",\n  \"North America\": \"NA\",\n  \"Oceania\": \"OC\",\n  \"South America\": \"SA\"\n};\n\nvar CountryBlock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountryBlock, _Component);\n\n  function CountryBlock(props) {\n    var _this;\n\n    _classCallCheck(this, CountryBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountryBlock).call(this, props));\n    _this.state = {\n      selected: \"--\",\n      continent: \"--\",\n      selectTop: \"--\"\n    };\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelectContinent = _this.onSelectContinent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelectTop = _this.onSelectTop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CountryBlock, [{\n    key: \"onSelect\",\n    value: function onSelect(event) {\n      var selectBlock = this.props.selectBlock;\n      var code = event.target.value.split(\" \")[0];\n\n      if (code !== \"--\") {\n        fetch(\"https://restcountries.eu/rest/v2/regionalbloc/\" + code).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          selectBlock(json.map(function (el) {\n            return el.name;\n          }));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        selectBlock([]);\n      }\n\n      this.setState({\n        selected: event.target.value,\n        continent: \"--\"\n      });\n    }\n  }, {\n    key: \"onSelectContinent\",\n    value: function onSelectContinent(event) {\n      var selectedCountries = [];\n      var countryAbv = Object.keys(Countries);\n      var selectedAbv = countryAbv.filter(function (elem) {\n        console.log(elem);\n        console.log(Countries[elem].continent, continents[event.target.value]);\n        console.log(Countries[elem].continent == continents[event.target.value]);\n        return Countries[elem].continent == continents[event.target.value];\n      });\n\n      for (var i = 0; i < selectedAbv.length; i++) {\n        if (countryAbv.indexOf(selectedAbv[i]) !== -1) {\n          selectedCountries.push(Countries[selectedAbv[i]].name);\n        }\n      }\n\n      this.props.selectBlock(selectedCountries);\n      this.setState({\n        selected: \"--\",\n        continent: event.target.value\n      });\n    }\n  }, {\n    key: \"onSelectHighest\",\n    value: function onSelectHighest() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"selectBlockWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          display: 'block',\n          \"fontWeight\": \"600\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Country Blocks\"), React.createElement(\"select\", {\n        value: this.state.selected,\n        onChange: this.onSelect,\n        className: \"selectBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, blocks.map(function (elem, index) {\n        return React.createElement(\"option\", {\n          value: elem,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, elem);\n      }))), React.createElement(\"div\", {\n        className: \"selectBlockWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          display: 'block',\n          \"fontWeight\": \"600\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Countries\"), React.createElement(\"select\", {\n        value: this.state.continent,\n        onChange: this.onSelectContinent,\n        className: \"selectBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, Object.keys(continents).map(function (elem, index) {\n        return React.createElement(\"option\", {\n          value: elem,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, elem);\n      }))), React.createElement(\"div\", {\n        className: \"selectBlockWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          display: 'block',\n          \"fontWeight\": \"600\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Top 10 Highest\"), React.createElement(\"select\", {\n        value: this.state.selectTop,\n        onChange: this.onSelectTop,\n        className: \"selectBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, Object.keys(continents).map(function (elem, index) {\n        return React.createElement(\"option\", {\n          value: elem,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, elem);\n      }))));\n    }\n  }]);\n\n  return CountryBlock;\n}(Component);\n\nexport { CountryBlock as default };","map":{"version":3,"sources":["/Users/fernb0t/Code/react/Opioid Crisis/src/Components/Chart/CountryBlock.js"],"names":["React","Component","Countries","highest","lowest","selectTop","blocks","continents","CountryBlock","props","state","selected","continent","onSelect","bind","onSelectContinent","onSelectTop","event","selectBlock","code","target","value","split","fetch","then","response","json","map","el","name","catch","err","console","log","setState","selectedCountries","countryAbv","Object","keys","selectedAbv","filter","elem","i","length","indexOf","push","display","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Countries from \"../../Resources/Continents\"\n\nconst highest = ['United States', 'Libya', 'United Arab Emirates', 'Estonia', 'Russian Federation', 'Iran', 'Canada', 'Lebanon', 'Kazakhstan', 'Lithuania'];\nconst lowest = ['South Sudan', 'Ethiopia', 'Burundi', 'Egypt', 'Somalia', 'Rwanda', 'Uganda', 'Solomon Islands', 'Madagascar', 'Papua New Guinea']\n\nconst selectTop = [\"Top 10 Highest\", \"Top 10 Lowest\"]\n\nconst blocks = [\"--\", \n    \"EU (European Union)\", \n    \"AU (African Union)\", \n    \"USAN (Union of South American Nations)\", \n    \"AL (Arab League)\", \n    \"ASEAN (Association of Southeast Asian Nations)\", \n    \"PA (Pacific Alliance)\", \n    \"USAN (Union of South American Nations)\"\n];\n\nconst continents = {\n    \"--\":\"--\",\n    \"Africa\": \"AF\",\n    \"Asia\": \"AS\",\n    \"Europe\": \"EU\",\n    \"North America\": \"NA\",\n    \"Oceania\": \"OC\",\n    \"South America\": \"SA\"\n};\n\nexport default class CountryBlock extends Component {\n  constructor(props){\n      super(props);\n      this.state = { selected:\"--\", continent:\"--\", selectTop:\"--\"};\n      \n      this.onSelect = this.onSelect.bind(this);\n      this.onSelectContinent = this.onSelectContinent.bind(this);\n      this.onSelectTop = this.onSelectTop.bind(this);\n  }\n\n  onSelect(event){\n    let { selectBlock } = this.props;\n    const code = event.target.value.split(\" \")[0];\n    if(code !== \"--\"){\n        fetch(\"https://restcountries.eu/rest/v2/regionalbloc/\" + code)\n            .then(function(response) {\n                return response.json();\n            }).then(function(json) {\n                selectBlock(json.map(el => el.name));\n            }).catch((err) => console.log(err) );\n    } else {\n        selectBlock([]);\n    }\n\n    this.setState({selected: event.target.value, continent:\"--\"});\n  }\n\n  onSelectContinent(event){\n    let selectedCountries = []\n    let countryAbv = Object.keys(Countries);\n    let selectedAbv = countryAbv.filter( elem => {\n        console.log(elem)\n        console.log(Countries[elem].continent, continents[event.target.value]);\n        console.log(Countries[elem].continent == continents[event.target.value])\n        return Countries[elem].continent == continents[event.target.value]\n    });\n\n    for(let i = 0; i < selectedAbv.length; i++){\n        if(countryAbv.indexOf(selectedAbv[i]) !== -1){\n            selectedCountries.push(Countries[selectedAbv[i]].name);\n        } \n    }\n\n    this.props.selectBlock(selectedCountries);\n    this.setState({selected: \"--\", continent:event.target.value});\n  }\n\n  onSelectHighest(){\n\n  }\n\n  render() {\n    return (\n        <div>\n            <div className=\"selectBlockWrapper\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Country Blocks\n                </label>\n                <select value={this.state.selected} onChange={this.onSelect} className=\"selectBlock\">\n                    {blocks.map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n            <div className=\"selectBlockWrapper\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Countries\n                </label>\n                <select value={this.state.continent} onChange={this.onSelectContinent} className=\"selectBlock\">\n                    {Object.keys(continents).map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n            <div className=\"selectBlockWrapper\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Top 10 Highest\n                </label>\n                <select value={this.state.selectTop} onChange={this.onSelectTop} className=\"selectBlock\">\n                    {Object.keys(continents).map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}