{"version":3,"sources":["logo.svg","Components/Legend/ActiveIcon.js","Components/Legend/Active.js","Components/Legend/CountryList.js","Components/Legend/Legend.js","Components/Chart.js","Components/Page/Header.js","Components/Page/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ActiveIcon","props","style","active","Object","objectSpread","fill","colors","name","react_default","a","createElement","xmlns","width","height","viewBox","className","cx","cy","r","Active","isSearching","activeCountries","length","map","el","index","key","onClick","country","toggleActive","Legend_ActiveIcon","padding","CountryList","countries","Legend","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","search","bind","assertThisInitialized","searchChange","filterCountries","setState","event","target","value","_this2","filter","elem","toLowerCase","_this$state","getActive","window","c","Legend_Active","type","placeholder","onChange","Legend_CountryList","Component","Chart","makeD3","fauxDiv","ReactFauxDOM","activeNames","activeData","getDataActive","margin","x","d3","range","y","svg","append","attr","parseYear","sample","data","domain","d","year","getDomain","val","valueline","Date","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","countryData","datum","err","return","ticks","tickSizeOuter","toReact","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","concat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","push","sort","b","Header","copied","share","copy","location","href","toString","setTimeout","Footer","initActive","urlActive","decodeURIComponent","slice","split","getActiveFromUrl","includes","App","keys","selectedCountry","findIndex","newActive","elm","toggledActive","localeCompare","Header_Header","class","Components_Chart","Legend_Legend_Legend","Page_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af588c43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7173f73d.svg\";","import React from 'react';\nimport colors from '../../Resources/colors.json'\n\nconst ActiveIcon = (props) => {\n    let style = props.active ? {'fill':colors[props.name],  ...props.style} : null;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" className=\"dot\" style={style}>\n            <circle cx=\"12\" cy=\"12\" r=\"12\"/>\n        </svg>\n    );\n};\n\nexport default ActiveIcon;","import React from 'react';\nimport ActiveIcon from \"./ActiveIcon\"\n\nconst Active = (props) => {\n    const {active, isSearching, activeCountries} = props;\n\n    const toggleActive =(country) => { \n        props.toggleActive(country);\n    }\n\n    \n    return (\n        <div className=\"legendActive\"> \n            <p className=\"legendTitle\">Legend </p>\n            { activeCountries.length && !isSearching \n                ? activeCountries.map( (el, index) => { \n                let name = el.name;\n                return(\n                <div className=\"countryNameList\" key={index} onClick={() => {toggleActive(el.name) }}>\n                    <span><ActiveIcon active={el.active} name={name} style={{padding:\"0px 5px 0px 0px\"}}/></span>\n                    <span>{name}</span>\n                </div>) \n            })\n            : null}\n            <hr />\n        </div>\n    )\n};\n\nexport default Active;\n","import React from 'react';\nimport ActiveIcon from \"./ActiveIcon\"\n\nconst CountryList = (props) => {\n    const {active, isSearching, countries} = props;\n\n    const toggleActive =(country) =>{ \n        props.toggleActive(country) \n    }\n\n    return (\n        <div>\n            <div className=\"countryList\">\n                { countries.map( (el, index) => {\n                    let name = el.name;\n                    return(\n                        <div className=\"countryNameList\" key={index} onClick={() => {toggleActive(name) }}>\n                            <span><ActiveIcon active={el.active} name={el.name}/></span> \n                            <span> {name} </span>\n                        </div>\n                    )\n                }) }\n                <hr />\n            </div>\n        </div>\n    )\n};\n\nexport default CountryList;\n","import React, { Component } from 'react'\nimport Active from \"./Active\"\nimport CountryList from \"./CountryList\"\nimport \"./Legend.css\"\n\nconst getActive = (countries) => {\n    return countries.filter(el => el.active === true)\n}\n\nexport default class Legend extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isSearching: false,\n            search:\"\"\n        }\n\n        this.toggleActive = this.toggleActive.bind(this);\n        this.isSearching = this.isSearching.bind(this);\n        this.searchChange = this.searchChange.bind(this)\n        this.filterCountries = this.filterCountries.bind(this)\n    }\n\n    toggleActive(country){\n        this.props.toggleActive(country);\n        this.setState({ isSearching:false, search:\"\" })\n    }\n\n    isSearching(){\n        this.setState({ isSearching: !this.state.isSearching })\n    }\n\n    searchChange(event){\n        let isSearching = this.state.search.length ? true : false;\n        this.setState({ search: event.target.value, isSearching:isSearching })\n    }\n\n    filterCountries(countries){\n        return countries.filter(elem => elem.name.toLowerCase().search(this.state.search.toLowerCase()) >= 0 )\n    }\n\n    render() {\n        let { search, isSearching } = this.state;\n        let { countries } = this.props;\n        let activeCountries = getActive(countries);\n        window.c = countries;\n        return (\n            <div className=\"LegendDisplay\">\n                \n                <Active isSearching={isSearching} \n                        activeCountries={activeCountries}\n                        toggleActive={this.toggleActive} />\n                <div className=\"search\">\n                    <input type=\"text\" placeholder=\"search\" \n                                       value={this.state.search}  \n                                       onChange={this.searchChange} />\n                </div>\n                \n                <CountryList isSearching={isSearching} \n                             countries={this.filterCountries(countries)} \n                             toggleActive={this.toggleActive}/> \n            </div>\n        )\n    }\n}\n","import { Component } from 'react'\nimport * as d3 from 'd3'\nimport * as ReactFauxDOM from 'react-faux-dom'\nimport data from \"../Resources/data.json\"\nimport colors from \"../Resources/colors.json\"\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n\n        this.makeD3 = this.makeD3.bind(this);\n        this.getActive = this.getActive.bind(this)\n        window.c = colors;\n    }\n\n    getActive(){\n        let countries = this.props.countries;\n        let active = countries.filter(el => el.active === true); // I have no idea but this call drops data.....\n        return active;\n    }\n\n    makeD3(){\n        let fauxDiv = ReactFauxDOM.createElement('div');  \n        \n        //  TODO: dynamically add new data\n        let activeNames = this.getActive();\n        let activeData = getDataActive(activeNames)\n        \n        // set the dimensions and margins of the graph\n        var margin = {top: 20, right: 20, bottom: 30, left: 50},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n        // parse the date / time\n        // set the ranges\n        var x = d3.scaleTime().range([0, width]);\n        var y = d3.scaleLinear().range([height, 0]);\n\n        \n\n        let svg = d3.select(fauxDiv).append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        let parseYear = d3.timeParse(\"%Y\");\n        // Scale the range of the data\n        let sample = data['Canada'][\"Both\"];\n        x.domain(d3.extent(sample, function(d) { return parseYear(d.year) }));\n        y.domain([0, d3.max(getDomain(activeData), function(d) { return d.val; })]);\n\n        // define the line\n        let valueline = d3.line()\n            .x(function(d) { return x(new Date(d.year, 1, 1)); })\n            .y(function(d) { return y(d.val); });\n\n        for( let countryData of activeData){\n            svg.append(\"path\")\n                .datum(countryData.data)\n                .attr(\"class\", \"line\")\n                .attr(\"d\",valueline)\n                .attr(\"stroke-width\", \"2px\")\n                .attr(\"stroke\", colors[countryData.name])\n                .attr('color', colors[countryData.name])\n                .attr(\"fill\", 'none');\n        }\n\n        // Add the X Axis\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call( d3.axisBottom(x).ticks(5).tickSizeOuter(0) );\n\n        // Add the Y Axis\n        svg.append(\"g\")\n            .call( d3.axisLeft(y).ticks(6).tickSizeOuter(0) );\n\n        return fauxDiv;\n    }\n\n    render() {\n        let FauxSvg = this.makeD3();\n\n        return (\n            FauxSvg.toReact()\n        );\n    }\n}\n\nconst getDataFor = (country) =>{\n    return { \n        name:country.name, \n        data:data[[country.name]]['Both'].sort(function(a, b){return a.year - b.year}) \n    }\n\n}\n\nconst getDomain = (countries) =>{\n    let d = [{val:3.0}]\n    for(let c of countries){\n        d = d.concat(c.data);\n    }\n    return d\n}\n\nconst getDataActive = (countries) =>{\n    let activeData = []\n    for(let c of countries){\n        activeData.push(getDataFor(c));\n    }\n    return activeData;\n}\n\nexport default ReactFauxDOM.withFauxDOM(Chart);\n\n// makeD4(){\n//     let fauxDiv = ReactFauxDOM.createElement('div');  \n\n//     // Set the margins\n//     var margin = {top: 60, right: 100, bottom: 20, left: 80},\n//     width = 850 - margin.left - margin.right,\n//     height = 370 - margin.top - margin.bottom;\n\n//     let parseYear = d3.timeParse(\"%Y\")\n//     let formatYear = d3.timeFormat(\"%Y\");\n//     console.log(d3.scaleTime.domain([parseYear(\"1990\"),parseYear(\"2017\")]));\n//     // Set the ranges\n//     var x = d3.scaleTime().domain([parseYear(\"1990\"),parseYear(\"2017\")]).range([0, width]);\n//     var y = d3.scaleLinear().range([height, 0]);\n\n//     // Define the line\n//     var valueLine = d3.line()\n//     .x(function(d) { return x(d.Month); })\n//     .y(function(d) { return y(+d.Sales); })\n\n//     // Create the svg canvas in the \"graph\" div\n//     var svg = d3.select(fauxDiv)\n//                     .append(\"svg\")\n//                     .style(\"width\", width + margin.left + margin.right + \"px\")\n//                     .style(\"height\", height + margin.top + margin.bottom + \"px\")\n//                     .attr(\"width\", width + margin.left + margin.right)\n//                     .attr(\"height\", height + margin.top + margin.bottom)\n//                     .append(\"g\")\n//                     .attr(\"transform\",\"translate(\" + margin.left + \",\" + margin.top + \")\")\n//                     .attr(\"class\", \"svg\");\n    \n//     // Scale the range of the data\n//     x.domain(d3.extent(data, function(d) { return d.year; }));\n//     y.domain([0, d3.max(data, function(d) { return d.val; })]);\n\n//     // Set up the x axis\n//     var xaxis = svg.append(\"g\")\n//         .attr(\"transform\", \"translate(0,\" + height + \")\")\n//         .attr(\"class\", \"x axis\")\n//         .call(d3.axisBottom(x)\n//             .ticks(d3.timeMonth)\n//             .tickSize(0, 0)\n//             .tickSizeInner(0)\n//             .tickPadding(10));\n\n//     // Add the Y Axis\n//     var yaxis = svg.append(\"g\")\n//         .attr(\"class\", \"y axis\")\n//         .call(d3.axisLeft(y)\n//             .ticks(5)\n//             .tickSizeInner(0)\n//             .tickPadding(6)\n//             .tickSize(0, 0));\n\n//     // yaxis.select(\".domain\").style(\"display\",\"none\")\n\n//     // Add a label to the y axis\n//     svg.append(\"text\")\n//         .attr(\"transform\", \"rotate(-90)\")\n//         .attr(\"y\", 0 - 60)\n//         .attr(\"x\", 0 - (height / 2))\n//         .attr(\"dy\", \"1em\")\n//         .style(\"text-anchor\", \"middle\")\n//         .text(\"Deaths per Thousand\")\n//         .attr(\"class\", \"y axis label\");\n\n//     // Draw the line\n//     svg.append(\"path\")\n//         .data([data])\n//         .attr(\"class\", \"line\")\n//         .attr(\"d\", valueLine);\n//     console.log(data)\n\n//     return fauxDiv;\n// }","import React, { Component } from 'react';\nimport copy from 'copy-to-clipboard';\nimport \"./Page.css\"\n\nexport default class Header extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            copied:false\n        }\n        this.share = this.share.bind(this)\n    }\n\n    share(){\n        copy(window.location.href +  \"/active\" + this.props.getActive().map(el => el.name).toString());\n        setTimeout(function(){\n            this.setState({copied:false});\n        }.bind(this),2000);\n        this.setState({copied:true})\n    }\n\n  \n    render() {\n        return (\n        <div>\n            <h2>Opoid Crisis</h2>    \n            <div onClick={this.share}>Share!</div>\n            <div className={this.state.copied ? \"copied\": \"noCopy\"}>\n                Copied to clipboard\n            </div>\n        </div>\n        )\n    }\n}\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            Global Burden of Disease Collaborative Network. Global Burden of Disease Study 2017 (GBD 2017) Results.\n            <br/>Seattle, United States: Institute for Health Metrics and Evaluation (IHME), 2018.\n            <br/>Available from http://ghdx.healthdata.org/gbd-results-tool.\n        </div>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport data from \"./Resources/data.json\";\nimport Legend from \"./Components/Legend/Legend\";\nimport Chart from \"./Components/Chart\";\nimport Header from \"./Components/Page/Header\";\nimport Footer from \"./Components/Page/Footer\";\n\nimport \"./Components/Chart/Chart.css\"\n\nconst getActiveFromUrl =() =>{\n  let activeUrl = \"active=\"\n  let index = window.location.href.search(\"active\") + activeUrl.length;\n  let activeCountries = decodeURIComponent(window.location.href.slice(index - 1));\n  return activeCountries.split(\",\");\n}\n\nconst initActive = (countries) => {\n  let d = []\n  let urlActive = getActiveFromUrl();\n  for( let name of countries.sort() ){\n    let active = urlActive.includes(name);\n    d.push({\n          name,\n          active,\n    })\n  }\n  return d\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { countries : initActive(Object.keys(data)),}\n    this.toggleActive = this.toggleActive.bind(this)\n    this.getActive = this.getActive.bind(this);\n  }\n\n  toggleActive(country){\n    let countries = this.state.countries;\n\n    let selectedCountry = countries[ countries.findIndex(elem => elem.name == country) ]\n    let newActive = countries.filter(elm => elm.name !== country);\n\n    let toggledActive = !selectedCountry.active;\n    newActive.push({name:country, active:toggledActive})\n\n    this.setState({countries: newActive.sort((a, b) =>  a.name.localeCompare(b.name) )})\n  }\n\n  getActive(){\n    return this.state.countries.filter(el => el.active === true)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header getActive={this.getActive}/>\n        <div class=\"content\">\n          <div className=\"Chart-Wrapper\">\n            <Chart countries={this.state.countries}/>\n            <Legend countries={this.state.countries}\n                    toggleActive={this.toggleActive}/>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}