{"version":3,"sources":["logo.svg","Components/Legend/ActiveIcon.js","Components/Legend/Active.js","Components/Legend/Search.js","Components/Legend/CountryList.js","Components/Legend/Legend.js","Components/Chart/Chart.js","Components/Page/Header.js","Components/Page/Footer.js","Components/Chart/CountryBlock.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ActiveIcon","props","style","active","Object","objectSpread","fill","colors","name","react_default","a","createElement","xmlns","width","height","viewBox","className","cx","cy","r","Active","isSearching","activeCountries","length","map","el","index","key","onClick","country","toggleActive","Legend_ActiveIcon","padding","Search","type","placeholder","value","search","onChange","event","target","CountryList","countries","Legend_Search","Legend","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","searchChange","filterCountries","getActive","filter","setState","_this2","elem","toLowerCase","_this$state","Legend_Active","Legend_CountryList","Component","Chart","innerWidth","window","makeD3","getDataFor","updateDimensions","gender","arguments","undefined","sort","b","year","addEventListener","fauxDiv","ReactFauxDOM","activeNames","activeData","getDataActive","margin","x","d3","range","y","svg","append","attr","parseYear","domain","d","getDomain","val","div","ticks","tickSizeOuter","tickSize","text","selectAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","valueType","countryData","cd","linePlot","datum","Date","data","enter","i","on","transition","duration","html","getTool","pageX","pageY","_iterator","Symbol","iterator","next","done","err","return","toReact","upper","lower","toFixed","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","c","concat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","push","sizeMe","Header","copied","share","activeCountriesStr","toString","copy","location","href","setTimeout","Footer","title","highest","lowest","selectTop","blocks","continents","--","Africa","Asia","Europe","North America","Oceania","South America","CountryBlock","selected","continent","onSelect","onSelectContinent","onSelectTop","selectBlock","code","split","fetch","then","response","json","catch","console","log","selectedCountries","countryAbv","keys","Countries","selectedAbv","indexOf","display","fontWeight","App","setActive","getActiveFromUrl","selectedCountry","findIndex","newActive","elm","toggledActive","localeCompare","block","Header_Header","CountryBlock_CountryBlock","Components_Chart_Chart","Legend_Legend_Legend","Page_Footer","decodeURIComponent","slice","includes","ReactGA","initialize","pageview","pathname","BrowserRouter","basename","process","Route","path","component","Main","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ypi2CAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qQCazBC,EAVI,SAACC,GAChB,IAAIC,EAAQD,EAAME,OAANC,OAAAC,EAAA,EAAAD,CAAA,CAAgBE,KAAOC,EAAON,EAAMO,OAAWP,EAAMC,OAAS,KAE1E,OACIO,EAAAC,EAAAC,cAAA,OAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,UAAU,MAAMd,MAAOA,GACtGO,EAAAC,EAAAC,cAAA,UAAQM,GAAG,KAAKC,GAAG,KAAKC,EAAE,SCqBvBC,EA1BA,SAACnB,GACmCA,EAAxCE,OADe,IACPkB,EAAgCpB,EAAhCoB,YAAaC,EAAmBrB,EAAnBqB,gBAM5B,OACIb,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACXP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,0BAAb,WACEM,EAAgBC,SAAWF,EACvBC,EAAgBE,IAAK,SAACC,EAAIC,GACxB,IAAIlB,EAAOiB,EAAGjB,KACd,OACIC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BAA6BW,IAAKD,EAAOE,QAAS,WAXjE,IAACC,IAWoFJ,EAAGjB,KAVxGP,EAAM6B,aAAaD,KAWCpB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAD,CAAY5B,OAAQsB,EAAGtB,OAAQK,KAAMA,EAAMN,MAAO,CAAC8B,QAAQ,sBACjEvB,EAAAC,EAAAC,cAAA,YAAOH,MAIrB,KACFC,EAAAC,EAAAC,cAAA,MAAIK,UAAU,iBCRXiB,EAdA,SAAChC,GAKZ,OACIQ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACXP,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOC,YAAY,SACvBC,MAAOnC,EAAMoC,OACbC,SARC,SAACC,GACdtC,EAAMqC,SAASC,EAAMC,OAAOJ,YCyBrBK,EAzBK,SAACxC,GAC0CA,EAApDE,OAAoDF,EAA5CoB,YADY,IACCqB,EAA+BzC,EAA/ByC,UAAWJ,EAAoBrC,EAApBqC,SAAUD,EAAUpC,EAAVoC,OAMjD,OACQ5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAACgC,EAAD,CAAQN,OAAQA,EACRC,SAAUA,IAChBI,EAAUlB,IAAK,SAACC,EAAIC,GAClB,IAAIlB,EAAOiB,EAAGjB,KACd,OACIC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BAA6BW,IAAKD,EAAOE,QAAS,WAXjE,IAACC,IAWoFrB,EAVrGP,EAAM6B,aAAaD,KAWCpB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAD,CAAY5B,OAAQsB,EAAGtB,OAAQK,KAAMiB,EAAGjB,QAC9CC,EAAAC,EAAAC,cAAA,gBAAQH,EAAR,QAIZC,EAAAC,EAAAC,cAAA,aCnBKiC,qBACjB,SAAAA,EAAY3C,GAAM,IAAA4C,EAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,KAAAH,IACdC,EAAAzC,OAAA4C,EAAA,EAAA5C,CAAA2C,KAAA3C,OAAA6C,EAAA,EAAA7C,CAAAwC,GAAAM,KAAAH,KAAM9C,KACDkD,MAAQ,CACT9B,aAAa,EACbgB,OAAO,IAGXQ,EAAKf,aAAee,EAAKf,aAAasB,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACpBA,EAAKxB,YAAcwB,EAAKxB,YAAY+B,KAAjBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACnBA,EAAKS,aAAeT,EAAKS,aAAaF,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACpBA,EAAKU,gBAAkBV,EAAKU,gBAAgBH,KAArBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACvBA,EAAKW,UAAYX,EAAKW,UAAUJ,KAAfhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAXHA,yEAcRH,GACN,OAAOA,EAAUe,OAAO,SAAAhC,GAAE,OAAkB,IAAdA,EAAGtB,8CAGxB0B,GACTkB,KAAK9C,MAAM6B,aAAaD,GACxBkB,KAAKW,SAAS,CAAErC,aAAY,EAAOgB,OAAO,2CAI1CU,KAAKW,SAAS,CAAErC,aAAc0B,KAAKI,MAAM9B,mDAGhCe,GACT,IAAIf,IAAc0B,KAAKI,MAAMd,OAAOd,OACpCwB,KAAKW,SAAS,CAAErB,OAAQD,EAAOf,YAAYA,4CAG/BqB,GAAU,IAAAiB,EAAAZ,KACtB,OAAOL,EAAUe,OAAO,SAAAG,GAAI,OAAIA,EAAKpD,KAAKqD,cAAcxB,OAAOsB,EAAKR,MAAMd,OAAOwB,gBAAkB,qCAG9F,IAAAC,EACyBf,KAAKI,MAA7Bd,EADDyB,EACCzB,OAAQhB,EADTyC,EACSzC,YACRqB,EAAcK,KAAK9C,MAAnByC,UACFpB,EAAkByB,KAAKS,UAAUd,GAErC,OACIjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACXP,EAAAC,EAAAC,cAACoD,EAAD,CAAQ1C,YAAaA,EACbC,gBAAiBA,EACjBQ,aAAciB,KAAKjB,eAE3BrB,EAAAC,EAAAC,cAACqD,EAAD,CAAa3B,OAAQA,EACRC,SAAUS,KAAKO,aACfjC,YAAaA,EACbqB,UAAWK,KAAKQ,gBAAgBb,GAChCZ,aAAciB,KAAKjB,uBApDZmC,8CCE9BC,qBACF,SAAAA,EAAYjE,GAAM,IAAA4C,EAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,KAAAmB,IACdrB,EAAAzC,OAAA4C,EAAA,EAAA5C,CAAA2C,KAAA3C,OAAA6C,EAAA,EAAA7C,CAAA8D,GAAAhB,KAAAH,KAAM9C,KACDkD,MAAQ,CAAEgB,WAAYC,OAAOD,YAElCtB,EAAKwB,OAASxB,EAAKwB,OAAOjB,KAAZhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACdA,EAAKW,UAAYX,EAAKW,UAAUJ,KAAfhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACjBA,EAAKyB,WAAazB,EAAKyB,WAAWlB,KAAhBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAClBA,EAAK0B,iBAAmB1B,EAAK0B,iBAAiBnB,KAAtBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAPVA,2EAad,OAFgBE,KAAK9C,MAAMyC,UACJe,OAAO,SAAAhC,GAAE,OAAkB,IAAdA,EAAGtB,4CAIhC0B,GAAuB,IAAd2C,EAAcC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAP,OACvB,OAAO5C,EAAO,KAAS,CAAC2C,IAASG,KAAK,SAASjE,EAAGkE,GAAG,OAAOlE,EAAEmE,KAAOD,EAAEC,kDAIvE9B,KAAKW,SAAS,CAACS,WAAYC,OAAOD,yDAIlCC,OAAOU,iBAAiB,SAAU/B,KAAKwB,mDAGnC,IAYA1D,EAAOC,EAZP6C,EAAAZ,KACEoB,EAAapB,KAAKI,MAAMgB,WAC1BY,EAAUC,gBAA2B,OAEnCC,EAAclC,KAAKS,YACnB0B,EAAaC,EAAcF,GAG3BG,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,KAMnDjB,EAAa,MACZtD,EAAQ,IAAMuE,EAAeA,EAC7BtE,EAAS,IAAMsE,EAAaA,GACtBjB,EAAa,MAAQA,GAAc,KACzCtD,EAAQsD,EAAa,IAAMiB,EAAeA,EAC1CtE,EAAS,IAAMsE,EAAaA,EAVhB,MAYZvE,EAAQsD,EAAaiB,EAAeA,EACpCtE,EAAS,IAAMsE,EAAaA,GAIhC,IAAMC,EAAIC,MAAeC,MAAM,CAAC,EAAG1E,IAC7B2E,EAAIF,MAAiBC,MAAM,CAACzE,EAAQ,IAEtC2E,EAAMH,IAAUP,GAASW,OAAO,OACvBC,KAAK,QAAS9E,EAAQuE,EAAcA,GACpCO,KAAK,SAAU7E,EAASsE,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAEzEQ,EAAYN,IAAa,MAE/BD,EAAEQ,OAAOP,IADM,CAAC,KAAM,MACK,SAASQ,GAAK,OAAOF,EAAUE,MAC1DN,EAAEK,OAAO,CAAC,EAAGP,IAAOS,EAAUb,GAAa,SAASY,GAAK,OAAOA,EAAEE,QAGlE,IAMIC,EAAMX,IAAU,kBAAkBI,OAAO,OAC5BC,KAAK,QAAS,WACdzF,MAAM,UAAW,GAGlCuF,EAAIC,OAAO,KACNC,KAAK,YAAa,eAAiB7E,EAAS,KAC5CoC,KAAMoC,IAAcD,GAAGa,MAAM,GAAGC,cAAc,GAAGC,SAAS,IAC1DV,OAAO,QACHC,KAAK,YAAa,aAAc9E,EAAQ,EAAI,UAC5C8E,KAAK,YAAa,SAClBA,KAAK,cAAe,UACpBU,KAAK,QAGdZ,EAAIC,OAAO,KACNxC,KAAMoC,IAAYE,GAAGU,MAAM,GAAGC,cAAc,GAAGC,SAAS,IACxDV,OAAO,QACHC,KAAK,YAAa,iBAA2B7E,EAAS,EAAI,gBAC1D6E,KAAK,cAAe,UACpBA,KAAK,YAAa,SAClBU,KAAK,sBAEdZ,EAAIa,UAAU,gBACLX,KAAK,YAAa,UAvEvB,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA/B,EAAA,IAyEJ,IAzEI,IAyEJgC,EAzEIC,EAAA,eAyCeC,EAgCVC,EAzELH,EAAAtE,MA0EM0E,EAAKnD,EAAKW,WAAYuC,GAExBE,EAAWtB,EAAIC,OAAO,KAAKC,KAAK,QAAS,YAE7CoB,EAASrB,OAAO,QACHsB,MAAOF,GACPnB,KAAK,QAAS,QACdA,KAAK,KAxCHiB,EAwCkB,MAvC1BtB,MACED,EAAE,SAASS,GAAK,OAAOT,EAAE,IAAI4B,KAAKnB,EAAEjB,KAAM,EAAG,MAC7CW,EAAE,SAASM,GAAK,OAAON,EAAEM,EAAEc,QAsCvBjB,KAAK,eAAgB,SACrBA,KAAK,SAAUpF,EAAOsG,EAAYrG,OAClCmF,KAAK,QAASpF,EAAOsG,EAAYrG,OACjCmF,KAAK,OAAQ,QAE1BoB,EAAST,UAAU,kBAAkBY,KAAMJ,GAC9BK,QAAQzB,OAAO,UACfC,KAAK,QAAS,iBACdA,KAAK,KAAM,SAASG,EAAGsB,GAAK,OAAO/B,EAAE,IAAI4B,KAAKnB,EAAEjB,KAAM,EAAG,MACzDc,KAAK,KAAM,SAASG,GAAK,OAAON,EAAEM,EAAEE,OACpCL,KAAK,IAAK,GACVA,KAAK,SAAUpF,EAAOsG,EAAYrG,OAClCmF,KAAK,OAAQpF,EAAOsG,EAAYrG,OAChC6G,GAAG,YAAa,SAASvB,GACtBG,EAAIqB,aACCC,SAAS,KACTrH,MAAM,UAAW,IACtB+F,EAAIuB,KAAMC,EAAQ3B,EAAGe,EAAYrG,OAC5BN,MAAM,OAASoF,IAASoC,MAAQ,EAAI,MACpCxH,MAAM,MAAQoF,IAASqC,MAAQ,GAAM,QAC7CN,GAAG,WAAY,SAASvB,GACjBG,EAAIqB,aACCC,SAAS,KACTrH,MAAM,UAAW,MAhC9C0H,EAAwB1C,EAAxB2C,OAAAC,cAAAvB,GAAAG,EAAAkB,EAAAG,QAAAC,MAAAzB,GAAA,EAAoCI,IAzEhC,MAAAsB,GAAAzB,GAAA,EAAAC,EAAAwB,EAAA,YAAA1B,GAAA,MAAAqB,EAAAM,QAAAN,EAAAM,SAAA,WAAA1B,EAAA,MAAAC,GA4GJ,OAAO1B,mCAMP,OAFchC,KAAKsB,SAGP8D,iBAhJAlE,cAqJdwD,EAAU,SAAC3B,EAAGtF,GAAS,IACpBqE,EAA2BiB,EAA3BjB,KAAMmB,EAAqBF,EAArBE,IAAKoC,EAAgBtC,EAAhBsC,MAAOC,EAASvC,EAATuC,MAIvB,MACI,kBAAqB7H,EAAO,IAAMqE,EAAO,mCAJ7CmB,EAAMA,EAAIsC,QAAQ,IAIqE,8BAHvFF,EAAQA,EAAME,QAAQ,IAGwG,8BAF9HD,EAAQA,EAAMC,QAAQ,IAE+I,kBAYnKvC,EAAY,SAACrD,GACf,IAAIoD,EAAI,CAAC,CAACE,IAAI,IADcuC,GAAA,EAAAC,GAAA,EAAAC,OAAA/D,EAAA,IAE5B,QAAAgE,EAAAC,EAAajG,EAAbmF,OAAAC,cAAAS,GAAAG,EAAAC,EAAAZ,QAAAC,MAAAO,GAAA,EAAuB,KAAfK,EAAeF,EAAAtG,MACnB0D,EAAIA,EAAE+C,OAAOD,EAAE1B,KAAF,OAHW,MAAAe,GAAAO,GAAA,EAAAC,EAAAR,EAAA,YAAAM,GAAA,MAAAI,EAAAT,QAAAS,EAAAT,SAAA,WAAAM,EAAA,MAAAC,GAK5B,OAAO3C,GAGLX,EAAgB,SAACzC,GACnB,IAhBgBb,EAgBZqD,EAAa,GADe4D,GAAA,EAAAC,GAAA,EAAAC,OAAAtE,EAAA,IAEhC,QAAAuE,EAAAC,EAAaxG,EAAbmF,OAAAC,cAAAgB,GAAAG,EAAAC,EAAAnB,QAAAC,MAAAc,GAAA,EAAuB,KAAfF,EAAeK,EAAA7G,MACnB8C,EAAWiE,KAjBR,CACH3I,MAFYqB,EAkBe+G,GAhBdpI,KACb0G,KAAKA,EAAK,CAACrF,EAAQrB,UAYS,MAAAyH,GAAAc,GAAA,EAAAC,EAAAf,EAAA,YAAAa,GAAA,MAAAI,EAAAhB,QAAAgB,EAAAhB,SAAA,WAAAa,EAAA,MAAAC,GAKhC,OAAO9D,GAGIkE,QAASpE,cAAyBd,qBCzL5BmF,qBACjB,SAAAA,EAAYpJ,GAAM,IAAA4C,EAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,KAAAsG,IACdxG,EAAAzC,OAAA4C,EAAA,EAAA5C,CAAA2C,KAAA3C,OAAA6C,EAAA,EAAA7C,CAAAiJ,GAAAnG,KAAAH,KAAM9C,KACDkD,MAAQ,CAAEmG,QAAO,GAEtBzG,EAAK0G,MAAQ1G,EAAK0G,MAAMnG,KAAXhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAJCA,uEAQd,IAAI2G,EAAqBzG,KAAK9C,MAAMuD,YAAYhC,IAAI,SAAAC,GAAE,OAAIA,EAAGjB,OAAMiJ,WACnEC,IAAKtF,OAAOuF,SAASC,KAAQ,UAAYJ,GACzCK,WAAW,WACP9G,KAAKW,SAAS,CAAC4F,QAAO,KACxBlG,KAAKL,MAAO,MACdA,KAAKW,SAAS,CAAC4F,QAAO,qCAItB,OACI7I,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBAAgBP,EAAAC,EAAAC,cAAA,4CAAuCF,EAAAC,EAAAC,cAAA,qEAAtE,KAEAF,EAAAC,EAAAC,cAAA,UAAQiB,QAASmB,KAAKwG,MAAOvI,UAAU,aAAvC,cAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAW+B,KAAKI,MAAMmG,OAAS,SAAU,iBAA9C,2CAxBoBrF,cCOrB6F,EAVA,WACX,OACIrJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UAAf,mDACoDP,EAAAC,EAAAC,cAAA,gDADpD,uBAEIF,EAAAC,EAAAC,cAAA,WAFJ,oFAGIF,EAAAC,EAAAC,cAAA,WAHJ,kBAGwBF,EAAAC,EAAAC,cAAA,KAAGK,UAAU,OAAO+I,MAAM,iCAAiCH,KAAK,+CAAhE,+CAHxB,cCDFI,EAAU,CAAC,gBAAiB,QAAS,uBAAwB,UAAW,qBAAsB,OAAQ,SAAU,UAAW,aAAc,aACzIC,EAAS,CAAC,cAAe,WAAY,UAAW,QAAS,UAAW,SAAU,SAAU,kBAAmB,aAAc,oBAEzHC,EAAY,CAAC,KAAM,iBAAkB,iBAErCC,EAAS,CAAC,KACZ,sBACA,qBACA,yCACA,mBACA,iDACA,wBACA,0CAGEC,EAAa,CACfC,KAAK,KACLC,OAAU,KACVC,KAAQ,KACRC,OAAU,KACVC,gBAAiB,KACjBC,QAAW,KACXC,gBAAiB,MAGAC,cACnB,SAAAA,EAAY3K,GAAM,IAAA4C,EAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,KAAA6H,IACd/H,EAAAzC,OAAA4C,EAAA,EAAA5C,CAAA2C,KAAA3C,OAAA6C,EAAA,EAAA7C,CAAAwK,GAAA1H,KAAAH,KAAM9C,KACDkD,MAAQ,CAAE0H,SAAS,KAAMC,UAAU,KAAMZ,UAAU,MAExDrH,EAAKkI,SAAWlI,EAAKkI,SAAS3H,KAAdhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAChBA,EAAKmI,kBAAoBnI,EAAKmI,kBAAkB5H,KAAvBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACzBA,EAAKoI,YAAcpI,EAAKoI,YAAY7H,KAAjBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KANLA,wEASTN,GAAM,IACP2I,EAAgBnI,KAAK9C,MAArBiL,YACAC,EAAO5I,EAAMC,OAAOJ,MAAMgJ,MAAM,KAAK,GAC9B,OAATD,EACAE,MAAM,iDAAmDF,GACpDG,KAAK,SAASC,GACX,OAAOA,EAASC,SACjBF,KAAK,SAASE,GACbN,EAAYM,EAAKhK,IAAI,SAAAC,GAAE,OAAIA,EAAGjB,UAC/BiL,MAAM,SAACxD,GAAD,OAASyD,QAAQC,IAAI1D,KAElCiD,EAAY,IAGhBnI,KAAKW,SAAS,CAACmH,SAAUtI,EAAMC,OAAOJ,MAAO0I,UAAU,KAAMZ,UAAU,iDAGvD3H,GAUhB,IATA,IAAIqJ,EAAoB,GACpBC,EAAazL,OAAO0L,KAAKC,GACzBC,EAAcH,EAAWpI,OAAQ,SAAAG,GAIjC,OAHA8H,QAAQC,IAAI/H,GACZ8H,QAAQC,IAAII,EAAUnI,GAAMkH,UAAWV,EAAW7H,EAAMC,OAAOJ,QAC/DsJ,QAAQC,IAAII,EAAUnI,GAAMkH,WAAaV,EAAW7H,EAAMC,OAAOJ,QAC1D2J,EAAUnI,GAAMkH,WAAaV,EAAW7H,EAAMC,OAAOJ,SAGxDgF,EAAI,EAAGA,EAAI4E,EAAYzK,OAAQ6F,KACS,IAAxCyE,EAAWI,QAAQD,EAAY5E,KAC/BwE,EAAkBzC,KAAK4C,EAAUC,EAAY5E,IAAI5G,MAIzDuC,KAAK9C,MAAMiL,YAAYU,GACvB7I,KAAKW,SAAS,CAACmH,SAAU,KAAMC,UAAUvI,EAAMC,OAAOJ,MAAO8H,UAAU,2CAG7D3H,GACe,kBAAtBA,EAAMC,OAAOJ,MACZW,KAAK9C,MAAMiL,YAAYlB,GACK,iBAAtBzH,EAAMC,OAAOJ,MACnBW,KAAK9C,MAAMiL,YAAYjB,GAEvBlH,KAAKmI,YAAY,MAErBnI,KAAKW,SAAS,CAACmH,SAAS,KAAMC,UAAU,KAAMZ,UAAU3H,EAAMC,OAAOJ,yCAIrE,OACI3B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,SAAOT,MAAO,CAACgM,QAAQ,QAASC,WAAa,QAA7C,kBAGA1L,EAAAC,EAAAC,cAAA,UAAQyB,MAAOW,KAAKI,MAAM0H,SAAUvI,SAAUS,KAAKgI,SAAU/J,UAAU,eAClEmJ,EAAO3I,IAAI,SAACoC,EAAMlC,GAAP,OAAiBjB,EAAAC,EAAAC,cAAA,UAAQyB,MAAOwB,EAAMjC,IAAKD,GAAQkC,OAGvEnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,SAAOT,MAAO,CAACgM,QAAQ,QAASC,WAAa,QAA7C,aAGA1L,EAAAC,EAAAC,cAAA,UAAQyB,MAAOW,KAAKI,MAAM2H,UAAWxI,SAAUS,KAAKiI,kBAAmBhK,UAAU,eAC5EZ,OAAO0L,KAAK1B,GAAY5I,IAAI,SAACoC,EAAMlC,GAAP,OAAiBjB,EAAAC,EAAAC,cAAA,UAAQyB,MAAOwB,EAAMjC,IAAKD,GAAQkC,OAGxFnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,SAAOT,MAAO,CAACgM,QAAQ,QAASC,WAAa,QAA7C,kBAGA1L,EAAAC,EAAAC,cAAA,UAAQyB,MAAOW,KAAKI,MAAM+G,UAAW5H,SAAUS,KAAKkI,YAAajK,UAAU,eACtEkJ,EAAU1I,IAAI,SAACoC,EAAMlC,GAAP,OAAiBjB,EAAAC,EAAAC,cAAA,UAAQyB,MAAOwB,EAAMjC,IAAKD,GAAQkC,eAlF5CK,aCjBpCmI,cACJ,SAAAA,EAAYnM,GAAM,IAAA4C,EAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,KAAAqJ,IAChBvJ,EAAAzC,OAAA4C,EAAA,EAAA5C,CAAA2C,KAAA3C,OAAA6C,EAAA,EAAA7C,CAAAgM,GAAAlJ,KAAAH,KAAM9C,KACDkD,MAAQ,CAAET,UAAY2J,EAAUC,IAAoBlM,OAAO0L,KAAK5E,IAAQ/C,WAAYC,OAAOD,YAEhGtB,EAAKf,aAAee,EAAKf,aAAasB,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACpBA,EAAKW,UAAYX,EAAKW,UAAUJ,KAAfhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACjBA,EAAKqI,YAAcrI,EAAKqI,YAAY9H,KAAjBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KACnBA,EAAK0B,iBAAmB1B,EAAK0B,iBAAiBnB,KAAtBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAyC,KAPRA,4EAULhB,GACX,IAAIa,EAAYK,KAAKI,MAAMT,UAEvB6J,EAAkB7J,EAAWA,EAAU8J,UAAU,SAAA5I,GAAI,OAAIA,EAAKpD,MAAQqB,KACtE4K,EAAY/J,EAAUe,OAAO,SAAAiJ,GAAG,OAAIA,EAAIlM,OAASqB,IAEjD8K,GAAiBJ,EAAgBpM,OACrCsM,EAAUtD,KAAK,CAAC3I,KAAKqB,EAAS1B,OAAOwM,IAErC5J,KAAKW,SAAS,CAAChB,UAAW+J,EAAU9H,KAAK,SAACjE,EAAGkE,GAAJ,OAAWlE,EAAEF,KAAKoM,cAAchI,EAAEpE,8CAI3E,OAAOuC,KAAKI,MAAMT,UAAUe,OAAO,SAAAhC,GAAE,OAAkB,IAAdA,EAAGtB,6CAGlC0M,GACV9J,KAAKW,SAAS,CAAChB,UAAW2J,EAAUQ,EAAOzM,OAAO0L,KAAK5E,iDAIrDnE,KAAKW,SAAS,CAACS,WAAYC,OAAOD,yDAIlCC,OAAOU,iBAAiB,SAAU/B,KAAKwB,mDAIzC,IAAM1D,EAASkC,KAAKI,MAAMgB,WAAa,IAEvC,OADAuH,QAAQC,IAAI9K,GAERJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAACmM,EAAD,CAAQtJ,UAAWT,KAAKS,UAChB0H,YAAanI,KAAKmI,cACxBzK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoM,EAAD,CAAc7B,YAAanI,KAAKmI,cAEhCzK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACXH,EACCJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACZP,EAAAC,EAAAC,cAACqM,EAAD,CAAOtK,UAAWK,KAAKI,MAAMT,YAC7BjC,EAAAC,EAAAC,cAACsM,EAAD,CAAQvK,UAAWK,KAAKI,MAAMT,UACtBZ,aAAciB,KAAKjB,gBAE/BrB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAACsM,EAAD,CAAQvK,UAAWK,KAAKI,MAAMT,UAClBZ,aAAciB,KAAKjB,eAC/BrB,EAAAC,EAAAC,cAACqM,EAAD,CAAOtK,UAAWK,KAAKI,MAAMT,gBASzCjC,EAAAC,EAAAC,cAACuM,EAAD,cArEMjJ,aA2EZqI,EAAkB,WACtB,IACI5K,EAAQ0C,OAAOuF,SAASC,KAAKvH,OAAO,UADxB,UAC8Cd,OAE9D,OADsB4L,mBAAmB/I,OAAOuF,SAASC,KAAKwD,MAAM1L,EAAQ,IACrD0J,MAAM,MAGzBiB,EAAY,SAAC/K,EAAiBoB,GAClC,IAAIoD,EAAI,GADwCS,GAAA,EAAAC,GAAA,EAAAC,OAAA/B,EAAA,IAEhD,QAAAgC,EAAAkB,EAAiBlF,EAAUiC,OAA3BkD,OAAAC,cAAAvB,GAAAG,EAAAkB,EAAAG,QAAAC,MAAAzB,GAAA,EAAmC,KAA1B/F,EAA0BkG,EAAAtE,MAC7BjC,EAASmB,EAAgB+L,SAAS7M,GACtCsF,EAAEqD,KAAK,CACD3I,OACAL,YANwC,MAAA8H,GAAAzB,GAAA,EAAAC,EAAAwB,EAAA,YAAA1B,GAAA,MAAAqB,EAAAM,QAAAN,EAAAM,SAAA,WAAA1B,EAAA,MAAAC,GAShD,OAAOX,GAGMsG,4BClGfkB,IAAQC,WAAW,kBACnBD,IAAQE,SAASpJ,OAAOuF,SAAS8D,SAAWrJ,OAAOuF,SAAStH,YAY7C+J,mLARX,OACE3L,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAQC,SAAUC,kBACdnN,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWC,YAJnB/J,aCEEgK,QACW,cAA7B7J,OAAOuF,SAASuE,UAEe,UAA7B9J,OAAOuF,SAASuE,UAEhB9J,OAAOuF,SAASuE,SAASC,MACvB,2DCZNC,IAASC,OAAO5N,EAAAC,EAAAC,cAAC2N,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.5487717a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a0f682b.svg\";","import React from 'react';\nimport colors from '../../Resources/colors.json'\n\nconst ActiveIcon = (props) => {\n    let style = props.active ? {'fill':colors[props.name],  ...props.style} : null;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" className=\"dot\" style={style}>\n            <circle cx=\"10\" cy=\"10\" r=\"10\"/>\n        </svg>\n    );\n};\n\nexport default ActiveIcon;","import React from 'react';\nimport ActiveIcon from \"./ActiveIcon\"\n\nconst Active = (props) => {\n    const {active, isSearching, activeCountries} = props;\n\n    const toggleActive =(country) => { \n        props.toggleActive(country);\n    }\n\n    return (\n        <div className=\"legendActive\"> \n            <p className=\"legendTitle mobileName\">Legend </p>\n            { activeCountries.length && !isSearching \n                ? activeCountries.map( (el, index) => { \n                    let name = el.name;\n                    return(\n                        <div className=\"countryNameList mobileName\" key={index} onClick={() => {toggleActive(el.name) }}>\n                            <span><ActiveIcon active={el.active} name={name} style={{padding:\"0px 5px 0px 0px\"}}/></span>\n                            <span>{name}</span>\n                        </div>\n                    ) \n                })\n            : null}\n            <hr className=\"mobileName\"/>\n        </div>\n    )\n};\n\nexport default Active;\n","import React from 'react';\n\nconst Search = (props) => {\n    const onChange = (event) => {\n        props.onChange(event.target.value)\n    }\n\n    return (\n        <div className=\"search\">\n            <input type=\"text\" placeholder=\"search\" \n                    value={props.search}  \n                    onChange={onChange} />\n        </div>\n    );\n};\n\nexport default Search;","import React from 'react';\nimport ActiveIcon from \"./ActiveIcon\";\nimport Search from \"./Search\";\n\nconst CountryList = (props) => {\n    const {active, isSearching, countries, onChange, search} = props;\n\n    const toggleActive =(country) =>{ \n        props.toggleActive(country) \n    }\n\n    return (\n            <div className=\"countryList\">\n                <Search search={search}\n                        onChange={onChange} />\n                { countries.map( (el, index) => {\n                    let name = el.name;\n                    return(\n                        <div className=\"countryNameList mobileName\" key={index} onClick={() => {toggleActive(name) }}>\n                            <span><ActiveIcon active={el.active} name={el.name}/></span> \n                            <span> {name} </span>\n                        </div>\n                    )\n                }) }\n                <hr />\n            </div>\n    )\n};\n\nexport default CountryList;\n","import React, { Component } from 'react'\nimport Active from \"./Active\"\nimport CountryList from \"./CountryList\"\nimport \"./Legend.css\"\n\nexport default class Legend extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isSearching: false,\n            search:\"\"\n        }\n\n        this.toggleActive = this.toggleActive.bind(this);\n        this.isSearching = this.isSearching.bind(this);\n        this.searchChange = this.searchChange.bind(this);\n        this.filterCountries = this.filterCountries.bind(this);\n        this.getActive = this.getActive.bind(this);\n    }\n\n    getActive(countries){\n        return countries.filter(el => el.active === true)\n    }\n\n    toggleActive(country){\n        this.props.toggleActive(country);\n        this.setState({ isSearching:false, search:\"\" })\n    }\n\n    isSearching(){\n        this.setState({ isSearching: !this.state.isSearching })\n    }\n\n    searchChange(value){\n        let isSearching = this.state.search.length ? true : false;\n        this.setState({ search: value, isSearching:isSearching })\n    }\n\n    filterCountries(countries){\n        return countries.filter(elem => elem.name.toLowerCase().search(this.state.search.toLowerCase()) >= 0 )\n    }\n\n    render() {\n        let { search, isSearching } = this.state;\n        let { countries } = this.props;\n        let activeCountries = this.getActive(countries);\n\n        return (\n            <div className=\"LegendDisplay\">\n                <Active isSearching={isSearching} \n                        activeCountries={activeCountries}\n                        toggleActive={this.toggleActive} />\n\n                <CountryList search={search}\n                             onChange={this.searchChange}\n                             isSearching={isSearching} \n                             countries={this.filterCountries(countries)} \n                             toggleActive={this.toggleActive} /> \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as ReactFauxDOM from 'react-faux-dom';\nimport data from \"../../Resources/data.json\";\nimport colors from \"../../Resources/colors.json\";\nimport sizeMe from \"react-sizeme\";\nimport './Chart.css';\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = { innerWidth: window.innerWidth }\n\n        this.makeD3 = this.makeD3.bind(this);\n        this.getActive = this.getActive.bind(this);\n        this.getDataFor = this.getDataFor.bind(this);\n        this.updateDimensions = this.updateDimensions.bind(this);\n    }\n\n    getActive(){\n        let countries = this.props.countries;\n        let active = countries.filter(el => el.active === true); \n        return active;\n    }\n\n    getDataFor(country, gender=\"Both\"){\n        return country['data'][[gender]].sort(function(a, b){return a.year - b.year});\n    }\n\n    updateDimensions(){\n        this.setState({innerWidth: window.innerWidth})\n    }\n    \n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n    }\n\n    makeD3(){\n        const innerWidth = this.state.innerWidth;\n        let fauxDiv = ReactFauxDOM.createElement('div');  \n\n        const activeNames = this.getActive();\n        const activeData = getDataActive(activeNames)\n        \n        // set the dimensions and margins of the graph\n        const margin = {top: 10, right: 25, bottom: 30, left: 37.5},\n              padding = 2.5;\n        \n        \n        let width, height;\n\n        if(innerWidth > 1150){\n            width = 940 - margin.right - margin.left;\n            height = 540 - margin.top - margin.bottom;\n        } else if(innerWidth < 1150 && innerWidth >= 750 ){\n            width = innerWidth - 232 - margin.right - margin.left;\n            height = 540 - margin.top - margin.bottom - padding;\n        } else {\n            width = innerWidth - margin.right - margin.left;\n            height = 390 - margin.top - margin.bottom;\n        }\n        // parse the date / time\n        // set the ranges\n        const x = d3.scaleTime().range([0, width]);\n        const y = d3.scaleLinear().range([height, 0]);\n\n        let svg = d3.select(fauxDiv).append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const parseYear = d3.timeParse(\"%Y\");\n        const domain = [1989, 2018];\n        x.domain(d3.extent(domain, function(d) { return parseYear(d) }));\n        y.domain([0, d3.max(getDomain(activeData), function(d) { return d.val; })]);\n\n        // Accepts \"upper\", \"lower\", \"val\"\n        const valueline = (valueType) =>{ \n            return d3.line()\n                    .x(function(d) { return x(new Date(d.year, 1, 1)); })\n                    .y(function(d) { return y(d[valueType]); }); \n        }\n\n        let div = d3.select(\".Chart-Wrapper\").append(\"div\")\n                        .attr(\"class\", \"tooltip\")\n                        .style(\"opacity\", 0);\n        \n        // Add the X Axis\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call( d3.axisBottom(x).ticks(5).tickSizeOuter(0).tickSize(0) )\n            .append(\"text\")\n                .attr('transform', \"translate(\" +width / 2 + \",\" + 27.5 + \")\")\n                .attr(\"font-size\", \"1.5em\")\n                .attr(\"text-anchor\", \"middle\")\n                .text(\"Year\");\n\n        // Add the Y Axis\n        svg.append(\"g\")\n            .call( d3.axisLeft(y).ticks(6).tickSizeOuter(0).tickSize(0) )\n            .append(\"text\")\n                .attr('transform', \"translate(\" + -30 + \",\" + height / 2 + \") rotate(90)\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"font-size\", \"1.5em\")\n                .text(\"Deaths per 100,000\");;\n        \n        svg.selectAll(\".tick > text\")\n                .attr(\"font-size\", \"1.25em\")\n\n        for( let countryData of activeData ){\n            const cd = this.getDataFor( countryData );\n            \n            let linePlot = svg.append(\"g\").attr(\"class\", \"linePlot\");\n            \n            linePlot.append(\"path\")\n                        .datum( cd )\n                        .attr(\"class\", \"line\")\n                        .attr(\"d\", valueline(\"val\"))\n                        .attr(\"stroke-width\", \"2.5px\")\n                        .attr(\"stroke\", colors[countryData.name])\n                        .attr('color', colors[countryData.name])\n                        .attr(\"fill\", 'none')\n\n            linePlot.selectAll(\".linePlotPoint\").data( cd )\n                        .enter().append(\"circle\") \n                        .attr(\"class\", \"linePlotPoint\")\n                        .attr(\"cx\", function(d, i) { return x(new Date(d.year, 1, 1)) })\n                        .attr(\"cy\", function(d) { return y(d.val) })\n                        .attr(\"r\", 3)\n                        .attr(\"stroke\", colors[countryData.name])\n                        .attr(\"fill\", colors[countryData.name])\n                        .on(\"mouseover\", function(d) {\n                            div.transition() \n                                .duration(200)\n                                .style(\"opacity\", 0.9);\n                            div.html( getTool(d, countryData.name) )\n                                .style(\"left\", (d3.event.pageX) +5 + \"px\")\n                                .style(\"top\", (d3.event.pageY - 28) + \"px\"); })\n                        .on(\"mouseout\", function(d) {\n                                div.transition()\n                                    .duration(500)\n                                    .style(\"opacity\", 0); });       \n            }\n\n        return fauxDiv;\n    }\n\n    render() {\n        let FauxSvg = this.makeD3();\n\n        return (\n            FauxSvg.toReact()\n        );\n    }\n}\n\nconst getTool = (d, name) => {\n    let {year, val, upper, lower} = d;\n    val = val.toFixed(2);\n    upper = upper.toFixed(2);\n    lower = lower.toFixed(2);\n    return ( \n        \"<span><span><b>\" +  name + \"(\" + year + \")</b></span><br /><span>Value: \" + val + \"</span><br /><span>Upper: \" + upper + \"</span><br /><span>Lower: \" + lower + \"</span></span>\"\n    ) \n}\n\n// data transformatiuon helper functions\nconst getDataFor = (country) =>{\n    return { \n        name:country.name, \n        data:data[[country.name]]\n    }\n}\n\nconst getDomain = (countries) =>{\n    let d = [{val:3.0}]\n    for(let c of countries){\n        d = d.concat(c.data['Both']);\n    }\n    return d\n}\n\nconst getDataActive = (countries) =>{\n    let activeData = []\n    for(let c of countries){\n        activeData.push(getDataFor(c));\n    }\n    return activeData;\n}\n\nexport default sizeMe()(ReactFauxDOM.withFauxDOM(Chart));\n","import React, { Component } from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport \"./Page.css\"\n\nexport default class Header extends Component {\n    constructor(props){\n        super(props)\n        this.state = { copied:false }\n\n        this.share = this.share.bind(this)\n    }\n\n    share(){\n        let activeCountriesStr = this.props.getActive().map(el => el.name).toString();\n        copy(window.location.href +  \"/active\" + activeCountriesStr);\n        setTimeout(function() {\n            this.setState({copied:false});\n        }.bind(this), 1500);\n        this.setState({copied:true})\n    }\n  \n    render() {\n        return (\n            <div className=\"Header\">\n                <div className=\"headerWrapper\"><h1>Opioid Deaths around the Globe</h1><h2>An app that demos imperative coding in component react.</h2> </div>  \n\n                <button onClick={this.share} className=\"shareBttn\">Share View</button>\n\n                <div className={this.state.copied ? \"copied\": \"copied noCopy\"}>\n                    Chart View Copied to clipboard!\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            Global Burden of Disease Collaborative Network. <i>Global Burden of Disease Study 2017</i> (GBD 2017) Results.\n            <br/>Seattle, United States: Institute for Health Metrics and Evaluation (IHME), 2018.\n            <br/>Available from <a className=\"link\" title=\"Global Burden Of Disease Tools\" href=\"http://ghdx.healthdata.org/gbd-results-tool\">http://ghdx.healthdata.org/gbd-results-tool</a>.\n        </div>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react'\nimport Countries from \"../../Resources/Continents\"\n\nconst highest = ['United States', 'Libya', 'United Arab Emirates', 'Estonia', 'Russian Federation', 'Iran', 'Canada', 'Lebanon', 'Kazakhstan', 'Lithuania'];\nconst lowest = ['South Sudan', 'Ethiopia', 'Burundi', 'Egypt', 'Somalia', 'Rwanda', 'Uganda', 'Solomon Islands', 'Madagascar', 'Papua New Guinea']\n\nconst selectTop = [\"--\", \"Top 10 Highest\", \"Top 10 Lowest\"]\n\nconst blocks = [\"--\", \n    \"EU (European Union)\", \n    \"AU (African Union)\", \n    \"USAN (Union of South American Nations)\", \n    \"AL (Arab League)\", \n    \"ASEAN (Association of Southeast Asian Nations)\", \n    \"PA (Pacific Alliance)\", \n    \"USAN (Union of South American Nations)\"\n];\n\nconst continents = {\n    \"--\":\"--\",\n    \"Africa\": \"AF\",\n    \"Asia\": \"AS\",\n    \"Europe\": \"EU\",\n    \"North America\": \"NA\",\n    \"Oceania\": \"OC\",\n    \"South America\": \"SA\"\n};\n\nexport default class CountryBlock extends Component {\n  constructor(props){\n      super(props);\n      this.state = { selected:\"--\", continent:\"--\", selectTop:\"--\"};\n      \n      this.onSelect = this.onSelect.bind(this);\n      this.onSelectContinent = this.onSelectContinent.bind(this);\n      this.onSelectTop = this.onSelectTop.bind(this);\n  }\n\n  onSelect(event){\n    let { selectBlock } = this.props;\n    const code = event.target.value.split(\" \")[0];\n    if (code !== \"--\"){\n        fetch(\"https://restcountries.eu/rest/v2/regionalbloc/\" + code)\n            .then(function(response) {\n                return response.json();\n            }).then(function(json) {\n                selectBlock(json.map(el => el.name));\n            }).catch((err) => console.log(err) );\n    } else {\n        selectBlock([]);\n    }\n\n    this.setState({selected: event.target.value, continent:\"--\", selectTop:\"--\"});\n  }\n\n  onSelectContinent(event){\n    let selectedCountries = []\n    let countryAbv = Object.keys(Countries);\n    let selectedAbv = countryAbv.filter( elem => {\n        console.log(elem)\n        console.log(Countries[elem].continent, continents[event.target.value]);\n        console.log(Countries[elem].continent == continents[event.target.value])\n        return Countries[elem].continent == continents[event.target.value]\n    });\n\n    for(let i = 0; i < selectedAbv.length; i++){\n        if (countryAbv.indexOf(selectedAbv[i]) !== -1){\n            selectedCountries.push(Countries[selectedAbv[i]].name);\n        } \n    }\n\n    this.props.selectBlock(selectedCountries);\n    this.setState({selected: \"--\", continent:event.target.value, selectTop:\"--\"});\n  }\n\n  onSelectTop(event){\n    if(event.target.value == \"Top 10 Highest\"){\n        this.props.selectBlock(highest);\n    } else if(event.target.value == \"Top 10 Lowest\"){\n        this.props.selectBlock(lowest);\n    } else{\n        this.selectBlock(\"--\")\n    }\n    this.setState({selected:\"--\", continent:\"--\", selectTop:event.target.value})\n  }\n\n  render() {\n    return (\n        <div className=\"selectDropdownWrapper\">\n            <div className=\"selectDropdown\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Country Blocks\n                </label>\n                <select value={this.state.selected} onChange={this.onSelect} className=\"selectBlock\">\n                    {blocks.map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n            <div className=\"selectDropdown\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Countries\n                </label>\n                <select value={this.state.continent} onChange={this.onSelectContinent} className=\"selectBlock\">\n                    {Object.keys(continents).map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n            <div className=\"selectDropdown\">\n                <label style={{display:'block', \"fontWeight\":\"600\"}}>\n                    Top 10 Highest\n                </label>\n                <select value={this.state.selectTop} onChange={this.onSelectTop} className=\"selectBlock\">\n                    {selectTop.map((elem, index) => <option value={elem} key={index}>{elem}</option> )}\n                </select>\n            </div>\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport data from \"./Resources/data.json\";\nimport Legend from \"./Components/Legend/Legend\";\nimport Chart from \"./Components/Chart/Chart\";\nimport Header from \"./Components/Page/Header\";\nimport Footer from \"./Components/Page/Footer\";\nimport CountryBlock from \"./Components/Chart/CountryBlock\"\nimport \"./Components/Chart/Chart.css\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { countries : setActive(getActiveFromUrl(), Object.keys(data)), innerWidth: window.innerWidth }\n\n    this.toggleActive = this.toggleActive.bind(this);\n    this.getActive = this.getActive.bind(this);\n    this.selectBlock = this.selectBlock.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  toggleActive(country){\n    let countries = this.state.countries;\n\n    let selectedCountry = countries[ countries.findIndex(elem => elem.name == country) ]\n    let newActive = countries.filter(elm => elm.name !== country);\n\n    let toggledActive = !selectedCountry.active;\n    newActive.push({name:country, active:toggledActive})\n\n    this.setState({countries: newActive.sort((a, b) =>  a.name.localeCompare(b.name) )})\n  }\n\n  getActive(){\n    return this.state.countries.filter(el => el.active === true)\n  }\n\n  selectBlock(block){\n    this.setState({countries: setActive(block, Object.keys(data))})\n  }\n\n  updateDimensions(){\n      this.setState({innerWidth: window.innerWidth})\n  }\n\n  componentDidMount() {\n      window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    const width = (this.state.innerWidth > 750);\n    console.log(width);\n    return (\n        <div className=\"App\">\n            <Header getActive={this.getActive}\n                    selectBlock={this.selectBlock}/>\n              <div className=\"content\">\n                <div >\n                  <CountryBlock selectBlock={this.selectBlock}/>\n                  \n                  <div className=\"Chart-Wrapper\">\n                    { width\n                    ?  <div className=\"chart-content\">\n                          <Chart countries={this.state.countries} />\n                          <Legend countries={this.state.countries}\n                                  toggleActive={this.toggleActive}/>\n                      </div>\n                    : <div className=\"chart-content\">\n                        <Legend countries={this.state.countries}\n                                    toggleActive={this.toggleActive}/>\n                        <Chart countries={this.state.countries} />\n                        \n                      </div>\n\n                    }\n                     \n                  </div>\n                </div>\n              </div>\n            <Footer />\n        </div>\n    );\n  }\n}\n\nconst getActiveFromUrl =() =>{\n  let activeUrl = \"active=\"\n  let index = window.location.href.search(\"active\") + activeUrl.length;\n  let activeCountries = decodeURIComponent(window.location.href.slice(index - 1));\n  return activeCountries.split(\",\");\n}\n\nconst setActive = (activeCountries, countries) => {\n  let d = []\n  for( let name of countries.sort() ){\n    let active = activeCountries.includes(name);\n    d.push({\n          name,\n          active,\n    })\n  }\n  return d\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport Main from \"./Main\"\n//To see if people use share feature\nimport ReactGA from 'react-ga';\n//Need router to handle url sharing\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nReactGA.initialize('UA-133428628-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n          <Route path=\"/\" component={Main} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}